%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - fun
scope: source.fun
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.fun
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '#'
      scope: punctuation.definition.comment.fun
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(if|elif|else|for|in|while|class|super|end|fun|import|as|throw|try|catch|print|ret|continue|break|lock)\b'
      scope: keyword.control.fun
    - match: '(?<![^.]\.|:)\b(false|nil|true)\b|(?<![.])\.{3}(?!\.)'
      scope: constant.language.fun
    - match: '(?<![^.]\.|:)\b(self)\b'
      scope: variable.language.self.fun

    # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.fun

  double_quoted_string:
    - meta_scope: string.quoted.double.fun
    - match: '\\.'
      scope: constant.character.escape.fun
    - match: '"'
      scope: punctuation.definition.string.end.fun
      pop: true

  line_comment:
    - meta_scope: comment.line.fun
    - match: $
      pop: true
